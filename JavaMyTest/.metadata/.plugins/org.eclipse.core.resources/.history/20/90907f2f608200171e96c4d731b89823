package com.yiibai.mypackage;

import java.util.Iterator;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Example;
import org.hibernate.criterion.Expression;
import org.hibernate.criterion.SimpleExpression;

public class Test {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		StandardServiceRegistry reg = new StandardServiceRegistryBuilder().configure("NewFile.xml").build();
//		StandardServiceRegistry reg = new StandardServiceRegistryBuilder().configure("hibernate.cfg.xml").build();
		//1.通过加载XML文件，获取配置方法
//		Configuration cfg = new Configuration().configure("NewFile.xml");
		//2.通过加载properties文件，获取配置方法
//		Configuration cfg = new Configuration().addFile("ModelClass.xml").addClass(com.yiibai.mypackage.Employee.class);
		
		SessionFactory sessionFactory = new MetadataSources(reg).buildMetadata().buildSessionFactory();
		
		Session session = sessionFactory.openSession();
		
		Transaction t = session.beginTransaction();
		
		//ADD
		Employee e1 = new Employee();
		e1.setId(777);
		e1.setFirstName("zhu");
		e1.setLastName("jie");
//				
//		session.save(e1);
//		session.persist(e1);
		
		//Delete
		//进测试，SQL语句中的表名，必须为对象的名称
//		String del_hql = "delete Employee where id = 721";//OK
//		String del_hql2 = "delete tb_employee where id = 621";//Error，运行失败
//		Query query = session.createQuery(del_hql2);
//		query.executeUpdate();
//		session.delete(e1);//OK
		
		//Get
		Employee res = session.get(Employee.class,new Integer(111));
		System.out.println("查询结果："+res.getLastName());
		
		//Find
		//Hibernate3之后，只能通过Query/Criteria接口查询
		//1.Query接口
		String hql = "from Employee where id = ?";
		Query query = session.createQuery(hql);
		query.setParameter(0, 123);
		List list = query.list();
		Iterator it = list.iterator();
		while(it.hasNext()) {
			System.out.println("Len:"+list.size());
			Employee emp = (Employee)it.next();
			System.out.println("id:"+ emp.getId() + ",vvv:" + emp.getLastName());
		}
		//2.Criteria接口
		Criteria criteria = session.createCriteria(Employee.class);
		criteria.add(Expression.eq("testName", "Max"));
		List list2 = criteria.list();
		Iterator it2 = list2.iterator();
		while(it2.hasNext()) {
			System.out.println("Len2:"+list2.size());
			Employee emp = (Employee)it2.next();
			System.out.println(emp.getLastName());
		}
		
		System.out.println("---------------------------------------------");
		Criteria c = session.createCriteria(Employee.class);
//		SimpleExpression se = Expression.gt("id",123);
		SimpleExpression se = Expression.lt("id", 123);
		c.add(se);
		List list3 = c.list();
		Iterator it3 = list3.iterator();
		while(it3.hasNext()) {
			System.out.println("Len3:"+list3.size());
			Employee emp = (Employee)it3.next();
			System.out.println(emp.getLastName());
		}
		
		System.out.println("1---------------------------------------------");
		Criteria c1 = session.createCriteria(Employee.class);
		
		Employee ee1 = new Employee();
		ee1.setId(123);
		
		c.add(Example.create(ee1));
		List list4 = c1.list();
		Iterator it4 = list4.iterator();
		while(it4.hasNext()) {
			System.out.println("Len3:"+list4.size());
			Employee emp = (Employee)it4.next();
			System.out.println(emp.getLastName());
		}
		
		t.commit();
		session.close();
		System.out.println("Persist OK!!!");
	}

}
